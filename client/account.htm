<!--Nav pills-->
<ul id="accountNavigation" class="nav nav-pills">
    <li class="active">
        <a id="accountOverview" href="#">Account overview</a>
    </li>
    <li><a id="accountEdit" href="#">Edit profile</a></li>
    <li><a id="accountBalance" href="#">Add credits</a></li>
</ul>

<!--Content-->
<div id="account-content">
    <!--Content added dynamically-->
</div>

<script>
    if (!framework.user) { //If the user is not logged in
        framework.loadPage(framework.defaultPage, null, null, function() {
            output.error('Login required.', 'You need to log in to see this page');
        });
    } else { //If the user is logged in, display the page

        var content;
        content = $('#account-content');

        //We wrap the content in functions as to always use the latest data
        /**
         * Creates the conctent of the overview page
         * @returns {string} The html of the overview page
         */
        function createOverview() {
            return '<div class="row">\
                        <div class="span2"><img src="http://gravatar.com/avatar/' + $.md5(framework.user.email) + '?size=100&d=mm" class="img-polaroid"></div>\
                        <p>Username: <strong id="usernameSpan">' + framework.user.username + '</strong></p>\
                        <p>Name: <strong id="nameSpan">' + framework.user.name + '</strong></p>\
                        <p>Email: <strong id="emailSpan">' + framework.user.email + '</strong></p>\
                        <p>Balance: <strong id="balanceSpan">' + framework.user.balance + '</strong></p>\
                 </div>\
                ';
        };

        /**
         * Creates the conctent of the edit page
         * @returns {string} The html of the edit page
         */
        function createEdit() {
            return '<form id="editUserForm" class="form-horizontal">\
                    <legend>Edit profile</legend>\
                    <div class="control-group">\
                        <label class="control-label" for="inputName">Name (optional)</label>\
                        <div class="controls">\
                            <div class="input-prepend">\
                                <span class="add-on"><i class="icon-user"></i></span>\
                                <input type="text" id="inputName" placeholder="' + framework.user.name + '"/>\
                            </div>\
                        </div>\
                    </div>\
                    <div class="control-group">\
                        <label class="control-label" for="inputEmail">Email (optional)</label>\
                        <div class="controls">\
                            <div class="input-prepend">\
                                <span class="add-on"><i class="icon-envelope"></i></span>\
                                <input type="text" id="inputEmail" placeholder="' + framework.user.email + '"/>\
                            </div>\
                        </div>\
                    </div>\
                    <div class="control-group">\
                        <label class="control-label" for="inputPassword">Password (optional)</label>\
                        <div class="controls">\
                            <div class="input-prepend">\
                                <span class="add-on"><i class="icon-asterisk"></i></span>\
                                <input type="password" id="inputPassword"/>\
                            </div>\
                        </div>\
                    </div>\
                    <div class="form-actions">\
                        <input type="submit" class="btn btn-primary" value="Save changes"/>\
                    </div>\
            </form>';
        };

        /**
         * Creates the conctent of the balance page
         * @returns {string} The html of the balance page
         */
        function createBalance() {
            return '<legend>Current payment method</legend>\
                    <img src="http://www.tbor.org/Photos/VisaMastercard.jpg" height="300px" width="200px">\
                    <p>Visa/mastercard: XXXX-XXXX-XXXX-3457</p>\
                    <button id="paymentMethodButton" class="btn btn-primary">Change payment method</button>\
                <br/><br/><br/>\
                <legend>Add credits to your account</legend>\
                <p>Current balance: <span id="userBalance">' + framework.user.balance + '</span> $</p>\
                <form id="balanceForm" class="form-inline">\
                    <div class="input-prepend input-append">\
                        <span class="add-on">$</span>\
                        <input class="span2" id="moneyInput" type="number" required="required">\
                        <span class="add-on">.00</span>\
                    </div>\
                    <input id="editUserSubmit" type="submit" class="btn btn-primary" value="Make transfer"/>\
                </form>';
        };

        //Adds a click listener to the navigation of the account page.
        $("#accountNavigation a").click(function (e) {
            e.preventDefault(); //Prevent the default click listener, since this is a a-tag.
            $("#accountNavigation li.active").removeClass("active"); //Remove the active styling of every account navigation tab, ...
            $(this).parent().addClass("active"); //and it it again to the parent of the clicked link
            switch (this.id) {
                case('accountOverview'):
                    content.html(createOverview());
                    break;
                case('accountEdit'):
                    content.html(createEdit());
                    //Submit handler
                    $('#editUserForm').submit(function () {
                        var cleanedInputName = $("#inputName").val().trim();
                        var cleanedInputEmail = $("#inputEmail").val().trim();
                        var cleanedInputPassword = $("#inputPassword").val().trim();

                        var submit = false;
                        var postData = {};
                        if (cleanedInputName) {
                            submit = true;
                            postData.name = cleanedInputName;
                        }
                        if (cleanedInputEmail) {
                            submit = true;
                            postData.email = cleanedInputEmail;
                        }
                        if (cleanedInputPassword) {
                            submit = true;
                            postData.password = cleanedInputPassword;
                        }

                        if (submit) {
                            $.ajax({
                                url: 'http://rentit.itu.dk/RentIt25/moofy.svc/users/' + framework.user.id + '/update',
                                type: 'POST',
                                data: JSON.stringify(postData),
                                contentType: 'application/json; charset=utf-8',
                                dataType: 'json',
                                async: true,
                                success: function (msg) {
                                    if (msg.success) {
                                        if (cleanedInputName) framework.user.name = cleanedInputName;
                                        if (cleanedInputEmail) framework.user.email = cleanedInputEmail;
                                        if (cleanedInputPassword) framework.user.password = cleanedInputEmail;
                                        //TODO: Consider giving the framework a reference to the following function or listen on the user object for changes
                                        reloadUserBox();
                                        framework.loadPage('account');
                                        output.success('Profile updated!', 'The profile was successfully updated.');
                                    } else {
                                        output.error('Error!', 'The profile was not updated.');
                                    }
                                },
                                error: function (msg) {
                                    output.error('Error!', 'The profile was not updated.');
                                }
                            });
                        } else {
                            output.error('No information was entered!', 'Please enter text in the fields you want to change.');
                        }
                        return false;
                    });

                    break;
                case('accountBalance'):
                    content.html(createBalance());
                    $('#balanceForm').submit(function () {
                        var money = $("#moneyInput").val().trim();
                        var postData = {moneyAmount: money};
                        $.ajax({
                            url: 'http://rentit.itu.dk/RentIt25/moofy.svc/users/' + framework.user.id + '/deposit',
                            type: 'POST',
                            data: JSON.stringify(postData),
                            contentType: 'application/json; charset=utf-8',
                            dataType: 'json',
                            async: true,
                            success: function (msg) {
                                if (msg.success) {
                                    framework.user.balance += +money; //The unary + operator is required to treat money as an int rather than string
                                    $('#userBalance').text(framework.user.balance);
                                    output.success('Money transfered!', 'The money was succesfully transferred.');
                                } else {
                                    output.error('Error!', 'The money was not transferred.');
                                }
                            },
                            error: function (msg) {
                                output.error('Error!', 'The money was not transferred.');
                            }
                        });
                        return false;
                    });


                    $('#paymentMethodButton').click(function () {
                        output.modal('This function does not exist yet', 'You can not change your payment method in the Moofy beta experience.');
                    });
                    break;
            }
        });
        content.html(createOverview());
    }
</script>