<script>
var container = $("#container");
var id = 4;
var mjson = getMovieJSON(id);

container.append(sjolo(id));

	$('#buyButton').click(function () {
	    //TODO: Get actual user id and credits for current item
	    var onBuyClick = function() {
	        var postData = JSON.stringify({ userId: framework.user.id});
	        $.ajax({
	            url: 'http://rentit.itu.dk/RentIt25/moofy.svc/movies/' + id + '/purchase',
	            type: 'POST',
	            data: postData,
	            contentType: 'application/json; charset=utf-8',
	            dataType: 'json',
	            async: true,
	            success: function(msg) {
	                output.success('Success!', 'The item was bought.');
	                framework.user.balance -= mjson.purchasePrice;
	            },
	            error: function(msg) {
	                output.error('Error!', 'An error occured. Please try again.');
	            }
	        });
	    };
	    var callAfterValidation = function() {
	        output.modal('Are you sure?', 'Do you really want to buy this movie?', 'Buy', onBuyClick);
	    };
	    validateUserBalance(mjson.purchasePrice, callAfterValidation);
	});

	$('#rentButton').click(function () {
	    //TODO: Get actual user id and credits for current item
	    var onRentClick = function() {
	        var postData = JSON.stringify({ userId: framework.user.id});
	        $.ajax({
	            url: 'http://rentit.itu.dk/RentIt25/moofy.svc/movies/' + id + '/rent',
	            type: 'POST',
	            data: postData,
	            contentType: 'application/json; charset=utf-8',
	            dataType: 'json',
	            async: true,
	            success: function(msg) {
	                output.success('Success!', 'The item was rented.');
	                framework.user.balance -= mjson.rentalPrice;
	            },
	            error: function(msg) {
	                output.error('Error!', 'An error occured. Please try again.');
	            }
	        });
	    };
	    var callAfterValidation = function() {
	        output.modal('Are you sure?', 'Do you really want to rent this movie?', 'Rent', onRentClick);
	    };
	    validateUserBalance(mjson.rentalPrice, callAfterValidation);
	});

function validateUserBalance(creditsNeeded, func) {
    if (framework.user.balance >= creditsNeeded) {
            func();
        } else {
            output.modal('Not enough credits', "You don't seem to have enough credits. Link to account site or something.");
        }
}

function getMovieJSON(id)
{
	var json = "";
	$.ajax
	({
		url: 'http://rentit.itu.dk/RentIt25/moofy.svc/movies/' + id,
		type: 'GET',
		dataType: 'json',
		contentType: 'application/json; charset=utf-8',
		async: false,
		success: function(data) 
		{
			json=data;
		},
		error: function(msg)
		{
			alert("Movie not found");
		}
	});
    return json;
}

function sjolo(id)
{
	var s = "";
	$.ajax
	({
		url: 'http://rentit.itu.dk/RentIt25/moofy.svc/movies/' + id,
		type: 'GET',
		dataType: 'json',
		contentType: 'application/json; charset=utf-8',
		async: false,
		success: function(data) 
		{
			s=movie(data);
		},
		error: function(msg)
		{
			alert("Movie not found");
		}
	});
	return s;
}
function movie(data)
{
	var s = "";
	var votes = " votes";
	if (data.numberOfVotes = 1) votes = " vote";
	s+="<div style='height:450px'>\
		<img src='" + data.coverUri + "' class='pull-left' style='width: 350px; height: 450px; padding: 3px; border: 1px solid #ddd; margin: 10px;'>\
		<div style='padding: 3px; margin: 10px;'><br>\
		<p><font size='6'>" + data.title + "</font><font size='5'> - " + data.release + "</font></p>\
		<p style='padding-top:15px'><b>Rating:</b> " + data.avgRating + " - Based on " + data.numberOfVotes + votes + "</p>\
		<p><b>" + data.genres + "</b></p>\
		<hr>\
		<p>" + data.description + "</p><p><b>Directors:</b> " + data.directors + "</p>\
		<hr>\
		<a id='buyButton' class='btn'>Buy - " + data.purchasePrice + " moneys</a>\
		<a id='rentButton' class='btn'>Rent - " + data.rentalPrice + " moneys</a>\
		</div></div>";
	return $(s);
}

</script>
