<script>
var container = $("#container");
var id = framework.query.movieId;
var data = getMovieJSON(id);
container.append(displayMovie(data));

if(framework.user && framework.user.admin) {
    //Show edit and delete buttons
    $("#container").prepend('<div class="pull-right" style="text-align: right;"><a href="?edit=movie&id='+id+'#manager" class="internal btn btn-inverse" style="margin-bottom: 5px;">Edit movie</a><br><a href="#" id="delete-movie-button" class="btn btn-primary">Delete</a></div>');
    //Delete movie click
    $("#delete-movie-button").click(function() {
        $.ajax({
            url: 'http://rentit.itu.dk/RentIt25/moofy.svc/movies/' + id + '/delete',
            type: 'POST',
            data: JSON.stringify({ managerid: framework.user.id }),
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function(data) {
                if(data.success) {
                    alert("Deleted movie...");
                    framework.loadPage("listMovies");
                }
                else {
                    alert("Failed to delete movie - "+data.message);
                }
            },
            error: function(msg) {
                alert("Failed to delete movie... (server or connection error)");
            }
        });
    });
}

$('#star').raty({ 
	score: data.avgRating,
	path: 'vendor/raty-2.5.2/lib/img/',
	number: 10,
	click: function(score)
	{
		var postData = {};
		if (framework.user == null)
			output.error('Error!', 'You must be logged in to rate a movie');
		else
		{
		postData.userId = framework.user.id;
		postData.rating = score;
	        $.ajax({
	            url: 'http://rentit.itu.dk/RentIt25/moofy.svc/movies/' + id + '/rate',
	            type: 'POST',
	            data: JSON.stringify(postData),
	            contentType: 'application/json; charset=utf-8',
	            dataType: 'json',
	            async: true,
	            success: function(msg) {
	                output.success('Success!', 'Your rating has been submitted.');
	            },
	            error: function(msg) {
	                output.error('Error!', 'An error occured. Please try again.');
	            }
	        });
		}
	}
	});

	$('#buyButton').click(function () {
	    //TODO: Get actual user id and credits for current item
	    var onBuyClick = function() {
	        var postData = JSON.stringify({ userId: framework.user.id});
	        $.ajax({
	            url: 'http://rentit.itu.dk/RentIt25/moofy.svc/movies/' + id + '/purchase',
	            type: 'POST',
	            data: postData,
	            contentType: 'application/json; charset=utf-8',
	            dataType: 'json',
	            async: true,
	            success: function(msg) {
	                output.success('Success!', 'The item was bought.');
	                var linkJSON = getMovieLinkJSON(id);
	                $('#buttonsDiv').empty();
	                $('#buttonsDiv').append("<a class='internal btn btn-primary' href='?movieId=" + id + "#showMovie'>Watch Movie</a>");
	                $('#buttonsDiv').append("<a class='btn' href='http://" + linkJSON.downloadLink + "'>Download Movie</a>");
	                framework.user.balance -= data.purchasePrice;
	            },
	            error: function(msg) {
	                output.error('Error!', 'An error occured. Please try again.');
	            }
	        });
	    };
	    var callAfterValidation = function() {
	        output.modal('Are you sure?', 'Do you really want to buy this movie?', 'Buy', onBuyClick);
	    };
	    validateUserBalance(data.purchasePrice, callAfterValidation);
	});

	$('#rentButton').click(function () {
	    //TODO: Get actual user id and credits for current item
	    var onRentClick = function() {
	        var postData = JSON.stringify({ userId: framework.user.id});
	        $.ajax({
	            url: 'http://rentit.itu.dk/RentIt25/moofy.svc/movies/' + id + '/rent',
	            type: 'POST',
	            data: postData,
	            contentType: 'application/json; charset=utf-8',
	            dataType: 'json',
	            async: true,
	            success: function(msg) {
	                output.success('Success!', 'The item was rented.');
	                var linkJSON = getMovieLinkJSON(id);
	                $('#buttonsDiv').empty();
	                $('#buttonsDiv').append("<a class='internal btn btn-primary' href='?movieId=" + id + "#showMovie'>Watch Movie</a>");
	                $('#buttonsDiv').append("<a class='btn' href='http://" + linkJSON.downloadLink + "'>Download Movie</a>");
	                framework.user.balance -= data.rentalPrice;
	            },
	            error: function(msg) {
	                output.error('Error!', 'An error occured. Please try again.');
	            }
	        });
	    };
	    var callAfterValidation = function() {
	        output.modal('Are you sure?', 'Do you really want to rent this movie?', 'Rent', onRentClick);
	    };
	    validateUserBalance(data.rentalPrice, callAfterValidation);
	});
	
	$("#fileRequest").click(function() {
		var linkJSON = getMovieLinkJSON(id);
    	window.location = "http://" + linkJSON.downloadLink;
	});

function validateUserBalance(creditsNeeded, func) {
    if (framework.user.balance >= creditsNeeded) {
            func();
        } else {
            output.modal('Not enough credits', 'You don\'t seem to have enough credits. Visit your <a href="#account" class="internal"><i class="icon-user"></i> account page</a> to add credits.');
        }
}

function getMovieJSON(id)
{
	var json = "";
	$.ajax
	({
		url: 'http://rentit.itu.dk/RentIt25/moofy.svc/movies/' + id,
		type: 'GET',
		dataType: 'json',
		contentType: 'application/json; charset=utf-8',
		async: false,
		success: function(data) 
		{
			json=data;
		},
		error: function(msg)
		{
			alert("Movie not found --- id "+id);
		}
	});
    return json;
}

function getMovieLinkJSON(id)
{
	var json = "";
	var postData = {};
	if (framework.user == null)
		output.error('Error!', 'You must be logged in to watch a movie');
	else
	{
		postData.userId = framework.user.id;
		$.ajax
		({
			url: 'http://rentit.itu.dk/RentIt25/moofy.svc/movies/' + id + '/download?userId=' + framework.user.id,
			type: 'GET',
			data: JSON.stringify(postData),
			dataType: 'json',
			contentType: 'application/json; charset=utf-8',
			async: false,
			success: function(data) 
			{
				json=data;
			},
			error: function(msg)
			{
				alert("Movie not found --- id "+id);
			}
		});
	}
    return json;
}

function userMovies(userId)
{
	var json = "";
	$.ajax
	({
		url: 'http://rentit.itu.dk/RentIt25/moofy.svc/users/' + userId + '/movies/current',
		type: 'GET',
		dataType: 'json',
		contentType: 'application/json; charset=utf-8',
		async: false,
		success: function(data) 
		{
			json=data;
		},
		error: function(msg)
		{
			alert("Invalid user");
		}
	});
    return json;
}

function displayMovie(data)
{
	var s = "";
	var votes = " votes";
	var buttons ="<div class='btn-group'>\
					<button id='buyButton' class='btn'>Buy - " + data.purchasePrice + " $</button>\
					<button id='rentButton' class='btn'>Rent - " + data.rentalPrice + " $</button>\
				  </div>";
	
	// check if user owns movie
	var userOwnsMovie = false;
	if (framework.user)
	{
		var movs = userMovies(framework.user.id);
		for (var i = 0; i < movs.length; i++)
			if (movs[i].id == id) userOwnsMovie = true;
	}
		
	// decide which buttons to show, depending on whether the user is allowed to watch the movie or not
	if (userOwnsMovie)
	{
		var linkJSON = getMovieLinkJSON(id);
		buttons = "<a class='internal btn btn-primary' href='?movieId=" + id + "#showMovie'>Watch Movie</a>\
				   <a href='http://" + linkJSON.downloadLink + "' download='MyGoogleLogo'>Download Movie</a>";
	}
	
	// create site contents
	if (data.numberOfVotes == 1) votes = " vote";
	s+="<div style='height:450px'>\
		<img src='" + data.coverUri + "' class='pull-left' style='width: 350px; height: 450px; padding: 3px; border: 1px solid #ddd; margin: 10px;'>\
		<div style='padding: 3px; margin: 10px;'><br>\
		<p><font size='6'>" + data.title + "</font><font size='5'> - " + data.release + "</font></p>\
		<div id='star' class='pull-right' style='padding-top:15px'></div><div class='pull-right' style='padding-top:15px; padding-right:8px'><b>Your vote:</b></div>\
		<p style='padding-top:15px'><b>Rating:</b> " + data.avgRating + " - Based on " + data.numberOfVotes + votes + "</p>\
		<p><b>" + data.genres.join(", ") + "</b></p>\
		<hr>\
		<p>" + data.description + "</p><p><b>Directors:</b> " + data.directors.join(", ") + "</p>\
		<hr>\
		<div id='buttonsDiv'>\
		" + buttons + "\
		</div>\
		</div></div>";
	return s;
}

</script>
